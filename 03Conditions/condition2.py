# Conditions avec une structure plus d√©velopp√©e
# Par : David Crowley, crowlda@ecolecatholique.ca
# 2020-12-01 üéÑ

# S√©quence exclusive 
#
# mot-cl√© elif ("else if ...", "sinon si ...")
#
"""
print("oui, non, peut-√™tre?")

choix  = input().lower()

if choix == "oui":
    print("bravo!")
elif choix == "non": 
    # contrairement √† un if, si choix == "oui", 
    # python saute les elif et passe tout de suite au code 
    # qui vient apr√®s la s√©quence de conditions
    print("ok")
elif choix == "peut-√™tre":
    print("mais d√©cide")

print("merci d'avoir particip√©")
"""

# S√©quences avec action par d√©faut
#
# mot-cl√© else ("sinon ...")
#
"""
print("oui, non, peut-√™tre?")

choix  = input().lower()

if choix == "oui":
    print("bravo!")
elif choix == "non":
    print("ok")
elif choix == "peut-√™tre":
    print("mais d√©cide")
else:
    print("je n'ai pas compris", choix)

print("merci d'avoir particip√©")
"""


# Exemple incluant quelque chose qui n'est pas conditionnel
# PRATIQUE √Ä √âVITER
#

print("oui ou non?")

choix  = input().lower()

# "conditionnel" - seulement dans certains cas d√©finis
if choix == "oui":
    print("bravo!")
    print("merci d'avoir particip√©") # code qui s'ex√©cute peu importe
elif choix == "non":
    print("ok")
    print("merci d'avoir particip√©") # code qui s'ex√©cute peu importe
else:
    print("je n'ai pas compris", choix)
    print("merci d'avoir particip√©") # code qui s'ex√©cute peu importe

# le code qui s'ex√©cute peu importe devrait √™tre √† l'ext√©rieur
# des conditions, comme dans les exemples pr√©c√©dants
#print("merci d'avoir particip√©")